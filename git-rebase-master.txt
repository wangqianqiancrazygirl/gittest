1. git rebase <branch-name>   // 将提交到<branch-name>分支上的所 有修改都移至当前分支上，就好像“重新播放”一样。

2. git merge <branch-name> // 合并分支


这 两种整合方法的最终结果没有任何区别，但是变基使得提交历史更加整洁。	
你在查看一个经 过变基的分支的历史记录时会发现，尽管实际的开发工作是并行的，但它们看上去就像是先 后串行的一样，提交历史是一条直线没有分叉。

一般我们这样做的目的是为了确保在向远程分支推送时能保持提交历史的整洁――例如向某 个别人维护的项目贡献代码时。	
在这种情况下，你首先在自己的分支里进行开发，当开发完 成时你需要先将你的代码变基到origin/master上，然后再向主项目提交修改。	
这样的话， 该项目的维护者就不再需要进行整合工作，只需要快进合并便可。
请注意，无论是通过变基，还是通过三方合并，整合的最终结果所指向的快照始终是一样 的，只不过提交历史不同罢了。	
变基是将一系列提交按照原有次序依次应用到另一分支上， 而合并是把最终结果合在一起。

