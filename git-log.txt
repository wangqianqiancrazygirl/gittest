1. git log    // all commited will be show (commitId author date)  

if you want see more. enter the "j" key. 
if you want quit. enter the "q" key. 

2. git log -p // show the content different

3. git log -p -2 (num)  // show the  last two times

4. git log --stat   // show the commited summary. ( add some lines in the file. remove some files in the file)

5.1 git log --pretty=oneline  // one commited show one line
5.2 git log --pretty=short // who was commit files  -m
5.3 git log --pretty=full // show author commit -m
5.4 git log --pretty=fuller // show author commit -m time
5.5 git log --pretty=format:"%h - %an, %ar : %s" // 

5.6 git log -- since=2.hours （数字随意 / weeks hours months years days minutes seconds）
5.7 git log -- since="" 
// 你可以给出各种时间格式，比如说具体的某一天（“2008-01-15”），或者是多久以前（“2 years 1 day 3 minutes ago”）。

5.8 git log --author authorName  // only see the author commited
eg: git log --author  wangqianqian123  // add "" also can show

5.9 git log --grep "filterInfo"   // filter info from commited info
eg: git log --grep "remove"

 git log --author wangqianqian123 --grep "remove" --all-match
// 用 --author 选项显示指定作者的提交，用 --grep 选项搜索提交说明中的关键字。（请注意，如果要得到同时满足这两个选项搜索条件的提交，就必须用 --all-match 选项。否则，满足任意一个条件的提交都会被匹配出来）

5.20 git log --author wangqianqian123 --before "2018-08-14" --空格fileRoute
eg:  git log --author wangqianqian123 --before "2018-08-14" --remove/      // "/" has and also not has

最后一个很实用的git	log选项是路径(path)，如果只关心某些文件或者目录的历史提交， 可以在git log选项的最后指定它们的路径。	因为是放在最后位置上的选项，所以用两个短划 线（--）隔开之前的选项和后面限定的路径名。

5.21 $git log -S<string>  // 可以列出那些添加或移除了某些字符串的提交。
比如 说，你想找出添加或移除了某一个特定函数的引用的提交，你可以这样使用：
$git log -Sbeyond

5.22 

表 2-1 列出了常用的格式占位符写法及其代表的意义。
选项 说明
    %H 提交对象（commit）的完整哈希字串
    %h 提交对象的简短哈希字串
    %T 树对象（tree）的完整哈希字串
    %t 树对象的简短哈希字串
    %P 父对象（parent）的完整哈希字串
    %p 父对象的简短哈希字串
    %an 作者（author）的名字
    %ae 作者的电子邮件地址
    %ad 作者修订日期（可以用 -date= 选项定制格式）
    %ar 作者修订日期，按多久以前的方式显示
    %cn 提交者(committer)的名字
    %ce 提交者的电子邮件地址
    %cd 提交日期
    %cr 提交日期，按多久以前的方式显示
    %s 提交说明


abstract: 
选项 说明
    -p 按补丁格式显示每个更新之间的差异。
    --stat 显示每次更新的文件修改统计信息。
    --shortstat 只显示 --stat 中最后的行数修改添加移除统计。
    --name-only 仅在提交信息后显示已修改的文件清单。
    --name-status 显示新增、修改、删除的文件清单。
    --abbrev-commit 仅显示 SHA-1 的前几个字符，而非所有的 40 个字符。
    --relative-date 使用较短的相对时间显示（比如，“2 weeks ago”）。
    --graph 显示 ASCII 图形表示的分支合并历史。
    --pretty 使用其他格式显示历史提交信息。可用的选项包括 oneline，short，full，fuller 和 format（后跟指定格式）。